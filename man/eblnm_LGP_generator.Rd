% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/03_LGP_nn.R
\name{eblnm_LGP_generator}
\alias{eblnm_LGP_generator}
\title{Generate a Custom `ebnm` Function for L-GP Smoothing with Non-Negative Constraints}
\usage{
eblnm_LGP_generator(LGP_setup)
}
\arguments{
\item{LGP_setup}{A list of precomputed matrices and related quantities (e.g., from
`LGP_setup`) required for L-GP smoothing.}
}
\value{
A function that performs L-GP smoothing with:
  - Posterior moments estimation using non-negative constraints.
  - Log-likelihood computation of the fitted model.
  - Posterior sampling to generate fitted values.
}
\description{
This function creates a custom `ebnm` function to fit data using
a (log) L-GP model with non-negative constraints enforced via an exponential
link function. The method ensures posterior means and variances remain positive,
leveraging exponential transformations in both fitting and posterior computations.
}
\details{
The function enforces non-negativity using an exponential link function,
making it suitable for cases where non-negative constraints are essential (e.g.,
modeling counts or rates).
}
\examples{
# Example setup and usage:
setup <- LGP_setup(t = seq(0, 1, length.out = 100))
ebgp <- eblnm_LGP_generator(setup)
result <- ebgp(x = rnorm(100), s = 0.1)

}
